

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Nov 02 17:06:17 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16LF1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.42
    33                           ; Generated 13/04/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16LF1829 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  011E                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  018E                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  020E                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0212                     	;# 
   160  0213                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0219                     	;# 
   172  021A                     	;# 
   173  021B                     	;# 
   174  021C                     	;# 
   175  021D                     	;# 
   176  021E                     	;# 
   177  021F                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  029B                     	;# 
   191  029C                     	;# 
   192  029D                     	;# 
   193  029E                     	;# 
   194  0311                     	;# 
   195  0311                     	;# 
   196  0312                     	;# 
   197  0313                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  038C                     	;# 
   203  038D                     	;# 
   204  038E                     	;# 
   205  0391                     	;# 
   206  0392                     	;# 
   207  0393                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011E                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  018E                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0194                     	;# 
   307  0195                     	;# 
   308  0196                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019C                     	;# 
   316  019C                     	;# 
   317  019D                     	;# 
   318  019E                     	;# 
   319  019F                     	;# 
   320  020C                     	;# 
   321  020D                     	;# 
   322  020E                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0219                     	;# 
   339  021A                     	;# 
   340  021B                     	;# 
   341  021C                     	;# 
   342  021D                     	;# 
   343  021E                     	;# 
   344  021F                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029D                     	;# 
   360  029E                     	;# 
   361  0311                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  038C                     	;# 
   370  038D                     	;# 
   371  038E                     	;# 
   372  0391                     	;# 
   373  0392                     	;# 
   374  0393                     	;# 
   375  0394                     	;# 
   376  0395                     	;# 
   377  0396                     	;# 
   378  039A                     	;# 
   379  039C                     	;# 
   380  039D                     	;# 
   381  039E                     	;# 
   382  039F                     	;# 
   383  0415                     	;# 
   384  0416                     	;# 
   385  0417                     	;# 
   386  041C                     	;# 
   387  041D                     	;# 
   388  041E                     	;# 
   389  0FE4                     	;# 
   390  0FE5                     	;# 
   391  0FE6                     	;# 
   392  0FE7                     	;# 
   393  0FE8                     	;# 
   394  0FE9                     	;# 
   395  0FEA                     	;# 
   396  0FEB                     	;# 
   397  0FED                     	;# 
   398  0FEE                     	;# 
   399  0FEF                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000D                     	;# 
   414  000E                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  0111                     	;# 
   452  0112                     	;# 
   453  0113                     	;# 
   454  0114                     	;# 
   455  0115                     	;# 
   456  0116                     	;# 
   457  0117                     	;# 
   458  0118                     	;# 
   459  0119                     	;# 
   460  011A                     	;# 
   461  011B                     	;# 
   462  011D                     	;# 
   463  011E                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  018E                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0194                     	;# 
   474  0195                     	;# 
   475  0196                     	;# 
   476  0199                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019D                     	;# 
   485  019E                     	;# 
   486  019F                     	;# 
   487  020C                     	;# 
   488  020D                     	;# 
   489  020E                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0219                     	;# 
   506  021A                     	;# 
   507  021B                     	;# 
   508  021C                     	;# 
   509  021D                     	;# 
   510  021E                     	;# 
   511  021F                     	;# 
   512  0291                     	;# 
   513  0291                     	;# 
   514  0292                     	;# 
   515  0293                     	;# 
   516  0294                     	;# 
   517  0295                     	;# 
   518  0295                     	;# 
   519  0296                     	;# 
   520  0298                     	;# 
   521  0298                     	;# 
   522  0299                     	;# 
   523  029A                     	;# 
   524  029B                     	;# 
   525  029C                     	;# 
   526  029D                     	;# 
   527  029E                     	;# 
   528  0311                     	;# 
   529  0311                     	;# 
   530  0312                     	;# 
   531  0313                     	;# 
   532  0318                     	;# 
   533  0318                     	;# 
   534  0319                     	;# 
   535  031A                     	;# 
   536  038C                     	;# 
   537  038D                     	;# 
   538  038E                     	;# 
   539  0391                     	;# 
   540  0392                     	;# 
   541  0393                     	;# 
   542  0394                     	;# 
   543  0395                     	;# 
   544  0396                     	;# 
   545  039A                     	;# 
   546  039C                     	;# 
   547  039D                     	;# 
   548  039E                     	;# 
   549  039F                     	;# 
   550  0415                     	;# 
   551  0416                     	;# 
   552  0417                     	;# 
   553  041C                     	;# 
   554  041D                     	;# 
   555  041E                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE9                     	;# 
   562  0FEA                     	;# 
   563  0FEB                     	;# 
   564  0FED                     	;# 
   565  0FEE                     	;# 
   566  0FEF                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0008                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  000D                     	;# 
   581  000E                     	;# 
   582  0011                     	;# 
   583  0012                     	;# 
   584  0013                     	;# 
   585  0014                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  008E                     	;# 
   600  0091                     	;# 
   601  0092                     	;# 
   602  0093                     	;# 
   603  0094                     	;# 
   604  0095                     	;# 
   605  0096                     	;# 
   606  0097                     	;# 
   607  0098                     	;# 
   608  0099                     	;# 
   609  009A                     	;# 
   610  009B                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  010C                     	;# 
   616  010D                     	;# 
   617  010E                     	;# 
   618  0111                     	;# 
   619  0112                     	;# 
   620  0113                     	;# 
   621  0114                     	;# 
   622  0115                     	;# 
   623  0116                     	;# 
   624  0117                     	;# 
   625  0118                     	;# 
   626  0119                     	;# 
   627  011A                     	;# 
   628  011B                     	;# 
   629  011D                     	;# 
   630  011E                     	;# 
   631  018C                     	;# 
   632  018D                     	;# 
   633  018E                     	;# 
   634  0191                     	;# 
   635  0191                     	;# 
   636  0192                     	;# 
   637  0193                     	;# 
   638  0193                     	;# 
   639  0193                     	;# 
   640  0194                     	;# 
   641  0195                     	;# 
   642  0196                     	;# 
   643  0199                     	;# 
   644  019A                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019C                     	;# 
   650  019C                     	;# 
   651  019D                     	;# 
   652  019E                     	;# 
   653  019F                     	;# 
   654  020C                     	;# 
   655  020D                     	;# 
   656  020E                     	;# 
   657  0211                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0212                     	;# 
   661  0213                     	;# 
   662  0213                     	;# 
   663  0214                     	;# 
   664  0214                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  0219                     	;# 
   673  021A                     	;# 
   674  021B                     	;# 
   675  021C                     	;# 
   676  021D                     	;# 
   677  021E                     	;# 
   678  021F                     	;# 
   679  0291                     	;# 
   680  0291                     	;# 
   681  0292                     	;# 
   682  0293                     	;# 
   683  0294                     	;# 
   684  0295                     	;# 
   685  0295                     	;# 
   686  0296                     	;# 
   687  0298                     	;# 
   688  0298                     	;# 
   689  0299                     	;# 
   690  029A                     	;# 
   691  029B                     	;# 
   692  029C                     	;# 
   693  029D                     	;# 
   694  029E                     	;# 
   695  0311                     	;# 
   696  0311                     	;# 
   697  0312                     	;# 
   698  0313                     	;# 
   699  0318                     	;# 
   700  0318                     	;# 
   701  0319                     	;# 
   702  031A                     	;# 
   703  038C                     	;# 
   704  038D                     	;# 
   705  038E                     	;# 
   706  0391                     	;# 
   707  0392                     	;# 
   708  0393                     	;# 
   709  0394                     	;# 
   710  0395                     	;# 
   711  0396                     	;# 
   712  039A                     	;# 
   713  039C                     	;# 
   714  039D                     	;# 
   715  039E                     	;# 
   716  039F                     	;# 
   717  0415                     	;# 
   718  0416                     	;# 
   719  0417                     	;# 
   720  041C                     	;# 
   721  041D                     	;# 
   722  041E                     	;# 
   723  0FE4                     	;# 
   724  0FE5                     	;# 
   725  0FE6                     	;# 
   726  0FE7                     	;# 
   727  0FE8                     	;# 
   728  0FE9                     	;# 
   729  0FEA                     	;# 
   730  0FEB                     	;# 
   731  0FED                     	;# 
   732  0FEE                     	;# 
   733  0FEF                     	;# 
   734  0000                     	;# 
   735  0001                     	;# 
   736  0002                     	;# 
   737  0003                     	;# 
   738  0004                     	;# 
   739  0005                     	;# 
   740  0006                     	;# 
   741  0007                     	;# 
   742  0008                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  0011                     	;# 
   750  0012                     	;# 
   751  0013                     	;# 
   752  0014                     	;# 
   753  0015                     	;# 
   754  0016                     	;# 
   755  0016                     	;# 
   756  0017                     	;# 
   757  0018                     	;# 
   758  0019                     	;# 
   759  001A                     	;# 
   760  001B                     	;# 
   761  001C                     	;# 
   762  001E                     	;# 
   763  001F                     	;# 
   764  008C                     	;# 
   765  008D                     	;# 
   766  008E                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0094                     	;# 
   771  0095                     	;# 
   772  0096                     	;# 
   773  0097                     	;# 
   774  0098                     	;# 
   775  0099                     	;# 
   776  009A                     	;# 
   777  009B                     	;# 
   778  009B                     	;# 
   779  009C                     	;# 
   780  009D                     	;# 
   781  009E                     	;# 
   782  010C                     	;# 
   783  010D                     	;# 
   784  010E                     	;# 
   785  0111                     	;# 
   786  0112                     	;# 
   787  0113                     	;# 
   788  0114                     	;# 
   789  0115                     	;# 
   790  0116                     	;# 
   791  0117                     	;# 
   792  0118                     	;# 
   793  0119                     	;# 
   794  011A                     	;# 
   795  011B                     	;# 
   796  011D                     	;# 
   797  011E                     	;# 
   798  018C                     	;# 
   799  018D                     	;# 
   800  018E                     	;# 
   801  0191                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0193                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0199                     	;# 
   811  019A                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019C                     	;# 
   817  019C                     	;# 
   818  019D                     	;# 
   819  019E                     	;# 
   820  019F                     	;# 
   821  020C                     	;# 
   822  020D                     	;# 
   823  020E                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0219                     	;# 
   840  021A                     	;# 
   841  021B                     	;# 
   842  021C                     	;# 
   843  021D                     	;# 
   844  021E                     	;# 
   845  021F                     	;# 
   846  0291                     	;# 
   847  0291                     	;# 
   848  0292                     	;# 
   849  0293                     	;# 
   850  0294                     	;# 
   851  0295                     	;# 
   852  0295                     	;# 
   853  0296                     	;# 
   854  0298                     	;# 
   855  0298                     	;# 
   856  0299                     	;# 
   857  029A                     	;# 
   858  029B                     	;# 
   859  029C                     	;# 
   860  029D                     	;# 
   861  029E                     	;# 
   862  0311                     	;# 
   863  0311                     	;# 
   864  0312                     	;# 
   865  0313                     	;# 
   866  0318                     	;# 
   867  0318                     	;# 
   868  0319                     	;# 
   869  031A                     	;# 
   870  038C                     	;# 
   871  038D                     	;# 
   872  038E                     	;# 
   873  0391                     	;# 
   874  0392                     	;# 
   875  0393                     	;# 
   876  0394                     	;# 
   877  0395                     	;# 
   878  0396                     	;# 
   879  039A                     	;# 
   880  039C                     	;# 
   881  039D                     	;# 
   882  039E                     	;# 
   883  039F                     	;# 
   884  0415                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  041C                     	;# 
   888  041D                     	;# 
   889  041E                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE9                     	;# 
   896  0FEA                     	;# 
   897  0FEB                     	;# 
   898  0FED                     	;# 
   899  0FEE                     	;# 
   900  0FEF                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0008                     	;# 
   910  0009                     	;# 
   911  000A                     	;# 
   912  000B                     	;# 
   913  000C                     	;# 
   914  000D                     	;# 
   915  000E                     	;# 
   916  0011                     	;# 
   917  0012                     	;# 
   918  0013                     	;# 
   919  0014                     	;# 
   920  0015                     	;# 
   921  0016                     	;# 
   922  0016                     	;# 
   923  0017                     	;# 
   924  0018                     	;# 
   925  0019                     	;# 
   926  001A                     	;# 
   927  001B                     	;# 
   928  001C                     	;# 
   929  001E                     	;# 
   930  001F                     	;# 
   931  008C                     	;# 
   932  008D                     	;# 
   933  008E                     	;# 
   934  0091                     	;# 
   935  0092                     	;# 
   936  0093                     	;# 
   937  0094                     	;# 
   938  0095                     	;# 
   939  0096                     	;# 
   940  0097                     	;# 
   941  0098                     	;# 
   942  0099                     	;# 
   943  009A                     	;# 
   944  009B                     	;# 
   945  009B                     	;# 
   946  009C                     	;# 
   947  009D                     	;# 
   948  009E                     	;# 
   949  010C                     	;# 
   950  010D                     	;# 
   951  010E                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  011E                     	;# 
   965  018C                     	;# 
   966  018D                     	;# 
   967  018E                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0193                     	;# 
   974  0194                     	;# 
   975  0195                     	;# 
   976  0196                     	;# 
   977  0199                     	;# 
   978  019A                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019B                     	;# 
   982  019B                     	;# 
   983  019C                     	;# 
   984  019C                     	;# 
   985  019D                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  020C                     	;# 
   989  020D                     	;# 
   990  020E                     	;# 
   991  0211                     	;# 
   992  0211                     	;# 
   993  0212                     	;# 
   994  0212                     	;# 
   995  0213                     	;# 
   996  0213                     	;# 
   997  0214                     	;# 
   998  0214                     	;# 
   999  0215                     	;# 
  1000  0215                     	;# 
  1001  0215                     	;# 
  1002  0216                     	;# 
  1003  0216                     	;# 
  1004  0217                     	;# 
  1005  0217                     	;# 
  1006  0219                     	;# 
  1007  021A                     	;# 
  1008  021B                     	;# 
  1009  021C                     	;# 
  1010  021D                     	;# 
  1011  021E                     	;# 
  1012  021F                     	;# 
  1013  0291                     	;# 
  1014  0291                     	;# 
  1015  0292                     	;# 
  1016  0293                     	;# 
  1017  0294                     	;# 
  1018  0295                     	;# 
  1019  0295                     	;# 
  1020  0296                     	;# 
  1021  0298                     	;# 
  1022  0298                     	;# 
  1023  0299                     	;# 
  1024  029A                     	;# 
  1025  029B                     	;# 
  1026  029C                     	;# 
  1027  029D                     	;# 
  1028  029E                     	;# 
  1029  0311                     	;# 
  1030  0311                     	;# 
  1031  0312                     	;# 
  1032  0313                     	;# 
  1033  0318                     	;# 
  1034  0318                     	;# 
  1035  0319                     	;# 
  1036  031A                     	;# 
  1037  038C                     	;# 
  1038  038D                     	;# 
  1039  038E                     	;# 
  1040  0391                     	;# 
  1041  0392                     	;# 
  1042  0393                     	;# 
  1043  0394                     	;# 
  1044  0395                     	;# 
  1045  0396                     	;# 
  1046  039A                     	;# 
  1047  039C                     	;# 
  1048  039D                     	;# 
  1049  039E                     	;# 
  1050  039F                     	;# 
  1051  0415                     	;# 
  1052  0416                     	;# 
  1053  0417                     	;# 
  1054  041C                     	;# 
  1055  041D                     	;# 
  1056  041E                     	;# 
  1057  0FE4                     	;# 
  1058  0FE5                     	;# 
  1059  0FE6                     	;# 
  1060  0FE7                     	;# 
  1061  0FE8                     	;# 
  1062  0FE9                     	;# 
  1063  0FEA                     	;# 
  1064  0FEB                     	;# 
  1065  0FED                     	;# 
  1066  0FEE                     	;# 
  1067  0FEF                     	;# 
  1068                           
  1069                           	psect	idataCOMMON
  1070  01F6                     __pidataCOMMON:	
  1071                           
  1072                           ;initializer for _tenhours
  1073  01F6  3401               	retlw	1
  1074                           
  1075                           ;initializer for _hours
  1076  01F7  3407               	retlw	7
  1077                           
  1078                           ;initializer for _minutes
  1079  01F8  3408               	retlw	8
  1080                           
  1081                           	psect	idataBANK0
  1082  01B6                     __pidataBANK0:	
  1083                           
  1084                           ;initializer for _maxtenhours
  1085  01B6  3403               	retlw	3
  1086                           
  1087                           ;initializer for _maxhours
  1088  01B7  340A               	retlw	10
  1089                           
  1090                           ;initializer for _maxtenminutes
  1091  01B8  3406               	retlw	6
  1092                           
  1093                           ;initializer for _maxminutes
  1094  01B9  340A               	retlw	10
  1095                           
  1096                           ;initializer for _maxseconds
  1097  01BA  343C               	retlw	60
  1098                           
  1099                           ;initializer for _delaytime
  1100  01BB  340A               	retlw	10
  1101                           
  1102                           ;initializer for _digit4val
  1103  01BC  3404               	retlw	4
  1104                           
  1105                           ;initializer for _digit4
  1106  01BD  3404               	retlw	4
  1107                           
  1108                           ;initializer for _digit3val
  1109  01BE  3403               	retlw	3
  1110                           
  1111                           ;initializer for _digit3
  1112  01BF  3403               	retlw	3
  1113                           
  1114                           ;initializer for _digit2val
  1115  01C0  3402               	retlw	2
  1116                           
  1117                           ;initializer for _digit2
  1118  01C1  3402               	retlw	2
  1119                           
  1120                           ;initializer for _digit1val
  1121  01C2  3401               	retlw	1
  1122                           
  1123                           ;initializer for _digit1
  1124  01C3  3401               	retlw	1
  1125                           
  1126                           	psect	nvBANK0
  1127  002E                     __pnvBANK0:	
  1128  002E                     _TMR0_InterruptHandler:	
  1129  002E                     	ds	2
  1130  0030                     _timer0ReloadVal:	
  1131  0030                     	ds	1
  1132  000B                     _INTCONbits	set	11
  1133  0015                     _TMR0	set	21
  1134  0095                     _OPTION_REG	set	149
  1135  0095                     _OPTION_REGbits	set	149
  1136  008E                     _TRISC	set	142
  1137  008D                     _TRISB	set	141
  1138  008C                     _TRISA	set	140
  1139  0097                     _WDTCON	set	151
  1140  0098                     _OSCTUNE	set	152
  1141  0099                     _OSCCON	set	153
  1142  010C                     _LATAbits	set	268
  1143  010D                     _LATBbits	set	269
  1144  010E                     _LATCbits	set	270
  1145  011D                     _APFCON0	set	285
  1146  011E                     _APFCON1	set	286
  1147  010E                     _LATC	set	270
  1148  010D                     _LATB	set	269
  1149  010C                     _LATA	set	268
  1150  018C                     _ANSELA	set	396
  1151  018D                     _ANSELB	set	397
  1152  018E                     _ANSELC	set	398
  1153  020E                     _WPUC	set	526
  1154  020C                     _WPUA	set	524
  1155  020D                     _WPUB	set	525
  1156                           
  1157                           ; #config settings
  1158  0000                     
  1159                           	psect	cinit
  1160  0015                     start_initialization:	
  1161  0015                     __initialization:	
  1162                           
  1163                           ; Initialize objects allocated to COMMON
  1164  0015  30F6               	movlw	low __pidataCOMMON
  1165  0016  0084               	movwf	4
  1166  0017  3081               	movlw	(high __pidataCOMMON)| (0+128)
  1167  0018  0085               	movwf	5
  1168  0019  3079               	movlw	low __pdataCOMMON
  1169  001A  0086               	movwf	6
  1170  001B  3000               	movlw	high __pdataCOMMON
  1171  001C  0087               	movwf	7
  1172  001D  3003               	movlw	3
  1173  001E  3181  21E1  3180   	fcall	init_ram
  1174                           
  1175                           ; Initialize objects allocated to BANK0
  1176  0021  30B6               	movlw	low __pidataBANK0
  1177  0022  0084               	movwf	4
  1178  0023  3081               	movlw	(high __pidataBANK0)| (0+128)
  1179  0024  0085               	movwf	5
  1180  0025  3020               	movlw	low __pdataBANK0
  1181  0026  0086               	movwf	6
  1182  0027  3000               	movlw	high __pdataBANK0
  1183  0028  0087               	movwf	7
  1184  0029  300E               	movlw	14
  1185  002A  3181  21E1         	fcall	init_ram
  1186                           
  1187                           ; Clear objects allocated to COMMON
  1188  002C  01F6               	clrf	__pbssCOMMON& (0+127)
  1189  002D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1190  002E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1191  002F                     end_of_initialization:	
  1192                           ;End of C runtime variable initialization code
  1193                           
  1194  002F                     __end_of__initialization:	
  1195  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1196  0030  0020               	movlb	0
  1197  0031  3181  2949         	ljmp	_main	;jump to C main() function
  1198                           
  1199                           	psect	bssCOMMON
  1200  0076                     __pbssCOMMON:	
  1201  0076                     _tenminutes:	
  1202  0076                     	ds	1
  1203  0077                     _seconds:	
  1204  0077                     	ds	1
  1205  0078                     _half_second:	
  1206  0078                     	ds	1
  1207                           
  1208                           	psect	dataCOMMON
  1209  0079                     __pdataCOMMON:	
  1210  0079                     _tenhours:	
  1211  0079                     	ds	1
  1212  007A                     _hours:	
  1213  007A                     	ds	1
  1214  007B                     _minutes:	
  1215  007B                     	ds	1
  1216                           
  1217                           	psect	dataBANK0
  1218  0020                     __pdataBANK0:	
  1219  0020                     _maxtenhours:	
  1220  0020                     	ds	1
  1221  0021                     _maxhours:	
  1222  0021                     	ds	1
  1223  0022                     _maxtenminutes:	
  1224  0022                     	ds	1
  1225  0023                     _maxminutes:	
  1226  0023                     	ds	1
  1227  0024                     _maxseconds:	
  1228  0024                     	ds	1
  1229  0025                     _delaytime:	
  1230  0025                     	ds	1
  1231  0026                     _digit4val:	
  1232  0026                     	ds	1
  1233  0027                     _digit4:	
  1234  0027                     	ds	1
  1235  0028                     _digit3val:	
  1236  0028                     	ds	1
  1237  0029                     _digit3:	
  1238  0029                     	ds	1
  1239  002A                     _digit2val:	
  1240  002A                     	ds	1
  1241  002B                     _digit2:	
  1242  002B                     	ds	1
  1243  002C                     _digit1val:	
  1244  002C                     	ds	1
  1245  002D                     _digit1:	
  1246  002D                     	ds	1
  1247                           
  1248                           	psect	inittext
  1249  01E1                     init_ram:	
  1250  01E1  00FE               	movwf	126
  1251  01E2                     initloop:	
  1252  01E2  0012               	moviw fsr0++
  1253  01E3  001E               	movwi fsr1++
  1254  01E4  0BFE               	decfsz	126,f
  1255  01E5  29E2               	goto	initloop
  1256  01E6  3400               	retlw	0
  1257                           
  1258                           	psect	cstackCOMMON
  1259  0070                     __pcstackCOMMON:	
  1260  0070                     ?_PIN_MANAGER_Initialize:	
  1261  0070                     ?_OSCILLATOR_Initialize:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_WDT_Initialize:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_TMR0_Initialize:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_TMR0_DefaultInterruptHandler:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ??_TMR0_DefaultInterruptHandler:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_updateTime:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_updateDigits:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_clrNumber:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_clearDigits:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_SYSTEM_Initialize:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ?_TMR0_ISR:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ??_TMR0_ISR:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_INTERRUPT_InterruptManager:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_main:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ?_displayNumber:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x0
  1308  0070                     	ds	1
  1309  0071                     ??_INTERRUPT_InterruptManager:	
  1310                           
  1311                           ; 1 bytes @ 0x1
  1312  0071                     	ds	1
  1313  0072                     ??_PIN_MANAGER_Initialize:	
  1314  0072                     ??_OSCILLATOR_Initialize:	
  1315                           ; 1 bytes @ 0x2
  1316                           
  1317  0072                     ??_WDT_Initialize:	
  1318                           ; 1 bytes @ 0x2
  1319                           
  1320  0072                     ?_TMR0_SetInterruptHandler:	
  1321                           ; 1 bytes @ 0x2
  1322                           
  1323  0072                     ??_updateTime:	
  1324                           ; 1 bytes @ 0x2
  1325                           
  1326  0072                     ??_clrNumber:	
  1327                           ; 1 bytes @ 0x2
  1328                           
  1329  0072                     ??_clearDigits:	
  1330                           ; 1 bytes @ 0x2
  1331                           
  1332  0072                     ??_displayNumber:	
  1333                           ; 1 bytes @ 0x2
  1334                           
  1335  0072                     displayNumber@number:	
  1336                           ; 1 bytes @ 0x2
  1337                           
  1338  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  1339                           ; 1 bytes @ 0x2
  1340                           
  1341                           
  1342                           ; 2 bytes @ 0x2
  1343  0072                     	ds	1
  1344  0073                     ?_displayDigit:	
  1345  0073                     displayDigit@number:	
  1346                           ; 1 bytes @ 0x3
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x3
  1350  0073                     	ds	1
  1351  0074                     ??_TMR0_Initialize:	
  1352  0074                     ??_TMR0_SetInterruptHandler:	
  1353                           ; 1 bytes @ 0x4
  1354                           
  1355  0074                     ??_displayDigit:	
  1356                           ; 1 bytes @ 0x4
  1357                           
  1358  0074                     displayDigit@digit:	
  1359                           ; 1 bytes @ 0x4
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0x4
  1363  0074                     	ds	1
  1364  0075                     ??_updateDigits:	
  1365  0075                     ??_SYSTEM_Initialize:	
  1366                           ; 1 bytes @ 0x5
  1367                           
  1368                           
  1369                           ; 1 bytes @ 0x5
  1370  0075                     	ds	1
  1371                           
  1372                           	psect	cstackBANK0
  1373  0031                     __pcstackBANK0:	
  1374  0031                     ??_main:	
  1375                           
  1376                           ; 1 bytes @ 0x0
  1377  0031                     	ds	1
  1378  0032                     main@maxseconds:	
  1379                           
  1380                           ; 1 bytes @ 0x1
  1381  0032                     	ds	1
  1382                           
  1383                           	psect	maintext
  1384  0149                     __pmaintext:	
  1385 ;;
  1386 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1387 ;;
  1388 ;; *************** function _main *****************
  1389 ;; Defined at:
  1390 ;;		line 56 in file "main.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  maxseconds      1    1[BANK0 ] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : B1F/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;Total ram usage:        2 bytes
  1409 ;; Hardware stack levels required when called:    7
  1410 ;; This function calls:
  1411 ;;		_SYSTEM_Initialize
  1412 ;;		_updateDigits
  1413 ;;		_updateTime
  1414 ;; This function is called by:
  1415 ;;		Startup code after reset
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _main
  1421  0149                     _main:	
  1422                           
  1423                           ;main.c: 58: uint8_t maxseconds = 60;
  1424                           
  1425                           ;incstack = 0
  1426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1427  0149  303C               	movlw	60
  1428  014A  0020               	movlb	0	; select bank0
  1429  014B  00B1               	movwf	??_main
  1430  014C  0831               	movf	??_main,w
  1431  014D  00B2               	movwf	main@maxseconds
  1432                           
  1433                           ;main.c: 59: seconds = 0;
  1434  014E  01F7               	clrf	_seconds	;volatile
  1435                           
  1436                           ;main.c: 60: half_second = 0;
  1437  014F  01F8               	clrf	_half_second	;volatile
  1438                           
  1439                           ;main.c: 63: SYSTEM_Initialize();
  1440  0150  3181  21C4  3181   	fcall	_SYSTEM_Initialize
  1441                           
  1442                           ;main.c: 69: (INTCONbits.GIE = 1);
  1443  0153  178B               	bsf	11,7	;volatile
  1444                           
  1445                           ;main.c: 72: (INTCONbits.PEIE = 1);
  1446  0154  170B               	bsf	11,6	;volatile
  1447                           
  1448                           ;main.c: 80: _delay((unsigned long)((100)*(500000/4000.0)));
  1449  0155  3011               	movlw	17
  1450  0156  0020               	movlb	0	; select bank0
  1451  0157  00B1               	movwf	??_main
  1452  0158  303A               	movlw	58
  1453  0159                     u287:	
  1454  0159  0B89               	decfsz	9,f
  1455  015A  2959               	goto	u287
  1456  015B  0BB1               	decfsz	??_main,f
  1457  015C  2959               	goto	u287
  1458  015D  0000               	nop
  1459  015E                     l1329:	
  1460                           ;main.c: 82: while (1) {
  1461                           
  1462                           
  1463                           ;main.c: 86: if(seconds >= maxseconds) {
  1464  015E  0020               	movlb	0	; select bank0
  1465  015F  0832               	movf	main@maxseconds,w
  1466  0160  0277               	subwf	_seconds,w	;volatile
  1467  0161  1C03               	skipc
  1468  0162  2966               	goto	l1333
  1469                           
  1470                           ;main.c: 87: updateTime();
  1471  0163  3180  20B3  3181   	fcall	_updateTime
  1472  0166                     l1333:	
  1473                           
  1474                           ;main.c: 88: }
  1475                           ;main.c: 91: updateDigits();
  1476  0166  3181  2121  3181   	fcall	_updateDigits
  1477  0169  295E               	goto	l1329
  1478  016A                     __end_of_main:	
  1479                           
  1480                           	psect	text1
  1481  00B3                     __ptext1:	
  1482 ;; *************** function _updateTime *****************
  1483 ;; Defined at:
  1484 ;;		line 215 in file "functions.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      unsigned char 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;Total ram usage:        1 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _updateTime
  1514  00B3                     _updateTime:	
  1515                           
  1516                           ;functions.c: 217: minutes++;
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _updateTime: [wreg+status,2+status,0]
  1520  00B3  3001               	movlw	1
  1521  00B4  00F2               	movwf	??_updateTime
  1522  00B5  0872               	movf	??_updateTime,w
  1523  00B6  07FB               	addwf	_minutes,f
  1524                           
  1525                           ;functions.c: 218: seconds = 0;
  1526  00B7  01F7               	clrf	_seconds	;volatile
  1527                           
  1528                           ;functions.c: 220: if(minutes >= maxminutes) {
  1529  00B8  0020               	movlb	0	; select bank0
  1530  00B9  0823               	movf	_maxminutes,w
  1531  00BA  027B               	subwf	_minutes,w
  1532  00BB  1C03               	skipc
  1533  00BC  28C2               	goto	l1269
  1534                           
  1535                           ;functions.c: 221: tenminutes++;
  1536  00BD  3001               	movlw	1
  1537  00BE  00F2               	movwf	??_updateTime
  1538  00BF  0872               	movf	??_updateTime,w
  1539  00C0  07F6               	addwf	_tenminutes,f
  1540                           
  1541                           ;functions.c: 222: minutes = 0;
  1542  00C1  01FB               	clrf	_minutes
  1543  00C2                     l1269:	
  1544                           
  1545                           ;functions.c: 223: }
  1546                           ;functions.c: 224: if(tenminutes >= maxtenminutes) {
  1547  00C2  0822               	movf	_maxtenminutes,w
  1548  00C3  0276               	subwf	_tenminutes,w
  1549  00C4  1C03               	skipc
  1550  00C5  28CC               	goto	l1277
  1551                           
  1552                           ;functions.c: 225: hours++;
  1553  00C6  3001               	movlw	1
  1554  00C7  00F2               	movwf	??_updateTime
  1555  00C8  0872               	movf	??_updateTime,w
  1556  00C9  07FA               	addwf	_hours,f
  1557                           
  1558                           ;functions.c: 226: tenminutes = 0;
  1559  00CA  01F6               	clrf	_tenminutes
  1560                           
  1561                           ;functions.c: 227: minutes = 0;
  1562  00CB  01FB               	clrf	_minutes
  1563  00CC                     l1277:	
  1564                           
  1565                           ;functions.c: 228: }
  1566                           ;functions.c: 229: if(hours >= maxhours) {
  1567  00CC  0821               	movf	_maxhours,w
  1568  00CD  027A               	subwf	_hours,w
  1569  00CE  1C03               	skipc
  1570  00CF  28D7               	goto	l1287
  1571                           
  1572                           ;functions.c: 230: tenhours++;
  1573  00D0  3001               	movlw	1
  1574  00D1  00F2               	movwf	??_updateTime
  1575  00D2  0872               	movf	??_updateTime,w
  1576  00D3  07F9               	addwf	_tenhours,f
  1577                           
  1578                           ;functions.c: 231: hours = 0;
  1579  00D4  01FA               	clrf	_hours
  1580                           
  1581                           ;functions.c: 232: tenminutes = 0;
  1582  00D5  01F6               	clrf	_tenminutes
  1583                           
  1584                           ;functions.c: 233: minutes = 0;
  1585  00D6  01FB               	clrf	_minutes
  1586  00D7                     l1287:	
  1587                           
  1588                           ;functions.c: 234: }
  1589                           ;functions.c: 235: if(((tenhours >= 2) && (hours >= 4)) || (tenhours > 2)) {
  1590  00D7  3002               	movlw	2
  1591  00D8  0279               	subwf	_tenhours,w
  1592  00D9  1C03               	skipc
  1593  00DA  28DF               	goto	l1291
  1594  00DB  3004               	movlw	4
  1595  00DC  027A               	subwf	_hours,w
  1596  00DD  1803               	skipnc
  1597  00DE  28E3               	goto	l1293
  1598  00DF                     l1291:	
  1599  00DF  3003               	movlw	3
  1600  00E0  0279               	subwf	_tenhours,w
  1601  00E1  1C03               	skipc
  1602  00E2  28E7               	goto	l1295
  1603  00E3                     l1293:	
  1604                           
  1605                           ;functions.c: 236: tenhours = 0;
  1606  00E3  01F9               	clrf	_tenhours
  1607                           
  1608                           ;functions.c: 237: hours = 0;
  1609  00E4  01FA               	clrf	_hours
  1610                           
  1611                           ;functions.c: 238: tenminutes = 0;
  1612  00E5  01F6               	clrf	_tenminutes
  1613                           
  1614                           ;functions.c: 239: minutes = 0;
  1615  00E6  01FB               	clrf	_minutes
  1616  00E7                     l1295:	
  1617                           
  1618                           ;functions.c: 240: }
  1619                           ;functions.c: 242: digit4val = minutes;
  1620  00E7  087B               	movf	_minutes,w
  1621  00E8  00F2               	movwf	??_updateTime
  1622  00E9  0872               	movf	??_updateTime,w
  1623  00EA  00A6               	movwf	_digit4val
  1624                           
  1625                           ;functions.c: 243: digit3val = tenminutes;
  1626  00EB  0876               	movf	_tenminutes,w
  1627  00EC  00F2               	movwf	??_updateTime
  1628  00ED  0872               	movf	??_updateTime,w
  1629  00EE  00A8               	movwf	_digit3val
  1630                           
  1631                           ;functions.c: 244: digit2val = hours;
  1632  00EF  087A               	movf	_hours,w
  1633  00F0  00F2               	movwf	??_updateTime
  1634  00F1  0872               	movf	??_updateTime,w
  1635  00F2  00AA               	movwf	_digit2val
  1636                           
  1637                           ;functions.c: 245: digit1val = tenhours;
  1638  00F3  0879               	movf	_tenhours,w
  1639  00F4  00F2               	movwf	??_updateTime
  1640  00F5  0872               	movf	??_updateTime,w
  1641  00F6  00AC               	movwf	_digit1val
  1642  00F7  0008               	return
  1643  00F8                     __end_of_updateTime:	
  1644                           
  1645                           	psect	text2
  1646  0121                     __ptext2:	
  1647 ;; *************** function _updateDigits *****************
  1648 ;; Defined at:
  1649 ;;		line 201 in file "functions.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      unsigned char 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;Total ram usage:        1 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    6
  1670 ;; This function calls:
  1671 ;;		_displayDigit
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _updateDigits
  1679  0121                     _updateDigits:	
  1680                           
  1681                           ;functions.c: 203: displayDigit(digit1, digit1val);
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _updateDigits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1685  0121  0020               	movlb	0	; select bank0
  1686  0122  082C               	movf	_digit1val,w
  1687  0123  00F5               	movwf	??_updateDigits
  1688  0124  0875               	movf	??_updateDigits,w
  1689  0125  00F3               	movwf	displayDigit@number
  1690  0126  082D               	movf	_digit1,w
  1691  0127  3180  20F8  3181   	fcall	_displayDigit
  1692                           
  1693                           ;functions.c: 204: _delay((unsigned long)((10)*(500000/4000000.0)));
  1694  012A  0000               	nop
  1695                           
  1696                           ;functions.c: 205: displayDigit(digit2, digit2val);
  1697  012B  0020               	movlb	0	; select bank0
  1698  012C  082A               	movf	_digit2val,w
  1699  012D  00F5               	movwf	??_updateDigits
  1700  012E  0875               	movf	??_updateDigits,w
  1701  012F  00F3               	movwf	displayDigit@number
  1702  0130  082B               	movf	_digit2,w
  1703  0131  3180  20F8  3181   	fcall	_displayDigit
  1704                           
  1705                           ;functions.c: 206: _delay((unsigned long)((10)*(500000/4000000.0)));
  1706  0134  0000               	nop
  1707                           
  1708                           ;functions.c: 207: displayDigit(digit3, digit3val);
  1709  0135  0020               	movlb	0	; select bank0
  1710  0136  0828               	movf	_digit3val,w
  1711  0137  00F5               	movwf	??_updateDigits
  1712  0138  0875               	movf	??_updateDigits,w
  1713  0139  00F3               	movwf	displayDigit@number
  1714  013A  0829               	movf	_digit3,w
  1715  013B  3180  20F8  3181   	fcall	_displayDigit
  1716                           
  1717                           ;functions.c: 208: _delay((unsigned long)((10)*(500000/4000000.0)));
  1718  013E  0000               	nop
  1719                           
  1720                           ;functions.c: 209: displayDigit(digit4, digit4val);
  1721  013F  0020               	movlb	0	; select bank0
  1722  0140  0826               	movf	_digit4val,w
  1723  0141  00F5               	movwf	??_updateDigits
  1724  0142  0875               	movf	??_updateDigits,w
  1725  0143  00F3               	movwf	displayDigit@number
  1726  0144  0827               	movf	_digit4,w
  1727  0145  3180  20F8         	fcall	_displayDigit
  1728                           
  1729                           ;functions.c: 210: _delay((unsigned long)((10)*(500000/4000000.0)));
  1730  0147  0000               	nop
  1731  0148  0008               	return
  1732  0149                     __end_of_updateDigits:	
  1733                           ;functions.c: 212: return 1;
  1734                           ;	Return value of _updateDigits is never used
  1735                           
  1736                           
  1737                           	psect	text3
  1738  00F8                     __ptext3:	
  1739 ;; *************** function _displayDigit *****************
  1740 ;; Defined at:
  1741 ;;		line 173 in file "functions.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  digit           1    wreg     unsigned char 
  1744 ;;  number          1    3[COMMON] unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  digit           1    4[COMMON] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      unsigned char 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1756 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;Total ram usage:        2 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    5
  1763 ;; This function calls:
  1764 ;;		_clearDigits
  1765 ;;		_displayNumber
  1766 ;; This function is called by:
  1767 ;;		_updateDigits
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _displayDigit
  1773  00F8                     _displayDigit:	
  1774                           
  1775                           ;incstack = 0
  1776                           ; Regs used in _displayDigit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1777                           ;displayDigit@digit stored from wreg
  1778  00F8  00F4               	movwf	displayDigit@digit
  1779                           
  1780                           ;functions.c: 176: clearDigits();
  1781  00F9  3181  21DA  3180   	fcall	_clearDigits
  1782                           
  1783                           ;functions.c: 177: displayNumber(number);
  1784  00FC  0873               	movf	displayDigit@number,w
  1785  00FD  3180  2033  3180   	fcall	_displayNumber
  1786                           
  1787                           ;functions.c: 178: do { LATCbits.LATC3 = 0; } while(0);
  1788  0100  0022               	movlb	2	; select bank2
  1789  0101  118E               	bcf	14,3	;volatile
  1790                           
  1791                           ;functions.c: 180: switch(digit) {
  1792  0102  2912               	goto	l1255
  1793  0103                     l383:	
  1794                           ;functions.c: 181: case 1: do { LATBbits.LATB7 = 0; } while(0); break;
  1795                           
  1796  0103  0022               	movlb	2	; select bank2
  1797  0104  138D               	bcf	13,7	;volatile
  1798  0105  0008               	return
  1799  0106                     l387:	
  1800                           ;functions.c: 182: case 2: do { LATCbits.LATC7 = 0; } while(0); break;
  1801                           
  1802  0106  0022               	movlb	2	; select bank2
  1803  0107  138E               	bcf	14,7	;volatile
  1804  0108  0008               	return
  1805  0109                     l390:	
  1806                           ;functions.c: 183: case 3: do { LATCbits.LATC5 = 0; } while(0); break;
  1807                           
  1808  0109  0022               	movlb	2	; select bank2
  1809  010A  128E               	bcf	14,5	;volatile
  1810  010B  0008               	return
  1811  010C                     l393:	
  1812                           ;functions.c: 184: case 4: do { LATAbits.LATA5 = 0; } while(0); break;
  1813                           
  1814  010C  0022               	movlb	2	; select bank2
  1815  010D  128C               	bcf	12,5	;volatile
  1816  010E  0008               	return
  1817  010F                     l1251:	
  1818                           ;functions.c: 185: default: clearDigits(); break;
  1819                           
  1820  010F  3181  21DA         	fcall	_clearDigits
  1821                           
  1822                           ;functions.c: 186: }
  1823  0111  0008               	return
  1824  0112                     l1255:	
  1825  0112  0874               	movf	displayDigit@digit,w
  1826                           
  1827                           ; Switch size 1, requested type "space"
  1828                           ; Number of cases is 4, Range of values is 1 to 4
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte           13     7 (average)
  1832                           ; direct_byte           17     9 (fixed)
  1833                           ; jumptable            263     9 (fixed)
  1834                           ;	Chosen strategy is simple_byte
  1835  0113  3A01               	xorlw	1	; case 1
  1836  0114  1903               	skipnz
  1837  0115  2903               	goto	l383
  1838  0116  3A03               	xorlw	3	; case 2
  1839  0117  1903               	skipnz
  1840  0118  2906               	goto	l387
  1841  0119  3A01               	xorlw	1	; case 3
  1842  011A  1903               	skipnz
  1843  011B  2909               	goto	l390
  1844  011C  3A07               	xorlw	7	; case 4
  1845  011D  1903               	skipnz
  1846  011E  290C               	goto	l393
  1847  011F  290F               	goto	l1251
  1848                           
  1849                           ;functions.c: 188: return 1;
  1850                           ;	Return value of _displayDigit is never used
  1851  0120  0008               	return
  1852  0121                     __end_of_displayDigit:	
  1853                           
  1854                           	psect	text4
  1855  0033                     __ptext4:	
  1856 ;; *************** function _displayNumber *****************
  1857 ;; Defined at:
  1858 ;;		line 38 in file "functions.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  number          1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  number          1    2[COMMON] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      unsigned char 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    4
  1879 ;; This function calls:
  1880 ;;		_clrNumber
  1881 ;; This function is called by:
  1882 ;;		_displayDigit
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _displayNumber
  1888  0033                     _displayNumber:	
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _displayNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1892                           ;displayNumber@number stored from wreg
  1893  0033  00F2               	movwf	displayNumber@number
  1894                           
  1895                           ;functions.c: 40: clrNumber();
  1896  0034  3181  21D0  3180   	fcall	_clrNumber
  1897                           
  1898                           ;functions.c: 42: do { LATCbits.LATC1 = 1; } while(0);
  1899  0037  0022               	movlb	2	; select bank2
  1900  0038  148E               	bsf	14,1	;volatile
  1901                           
  1902                           ;functions.c: 44: switch(number) {
  1903  0039  2892               	goto	l1209
  1904  003A                     l192:	
  1905                           ;functions.c: 46: do { LATBbits.LATB4 = 1; } while(0);
  1906                           
  1907                           ;functions.c: 45: case 0:
  1908                           
  1909  003A  160D               	bsf	13,4	;volatile
  1910                           
  1911                           ;functions.c: 47: do { LATBbits.LATB6 = 1; } while(0);
  1912  003B  170D               	bsf	13,6	;volatile
  1913                           
  1914                           ;functions.c: 48: do { LATCbits.LATC2 = 1; } while(0);
  1915  003C  150E               	bsf	14,2	;volatile
  1916                           
  1917                           ;functions.c: 49: do { LATCbits.LATC6 = 1; } while(0);
  1918  003D  170E               	bsf	14,6	;volatile
  1919                           
  1920                           ;functions.c: 50: do { LATCbits.LATC4 = 1; } while(0);
  1921  003E  160E               	bsf	14,4	;volatile
  1922                           
  1923                           ;functions.c: 51: do { LATCbits.LATC0 = 1; } while(0);
  1924  003F  140E               	bsf	14,0	;volatile
  1925                           
  1926                           ;functions.c: 52: do { LATBbits.LATB5 = 0; } while(0);
  1927  0040  128D               	bcf	13,5	;volatile
  1928                           
  1929                           ;functions.c: 53: break;
  1930  0041  0008               	return
  1931  0042                     l208:	
  1932                           ;functions.c: 56: do { LATBbits.LATB4 = 0; } while(0);
  1933                           
  1934                           ;functions.c: 55: case 1:
  1935                           
  1936  0042  120D               	bcf	13,4	;volatile
  1937                           
  1938                           ;functions.c: 57: do { LATBbits.LATB6 = 1; } while(0);
  1939  0043  170D               	bsf	13,6	;volatile
  1940                           
  1941                           ;functions.c: 58: do { LATCbits.LATC2 = 1; } while(0);
  1942  0044  150E               	bsf	14,2	;volatile
  1943                           
  1944                           ;functions.c: 59: do { LATCbits.LATC6 = 0; } while(0);
  1945  0045  130E               	bcf	14,6	;volatile
  1946                           
  1947                           ;functions.c: 60: do { LATCbits.LATC4 = 0; } while(0);
  1948  0046  120E               	bcf	14,4	;volatile
  1949                           
  1950                           ;functions.c: 61: do { LATCbits.LATC0 = 0; } while(0);
  1951  0047  100E               	bcf	14,0	;volatile
  1952                           
  1953                           ;functions.c: 62: do { LATBbits.LATB5 = 0; } while(0);
  1954  0048  128D               	bcf	13,5	;volatile
  1955                           
  1956                           ;functions.c: 63: break;
  1957  0049  0008               	return
  1958  004A                     l223:	
  1959                           ;functions.c: 66: do { LATBbits.LATB4 = 1; } while(0);
  1960                           
  1961                           ;functions.c: 65: case 2:
  1962                           
  1963  004A  160D               	bsf	13,4	;volatile
  1964                           
  1965                           ;functions.c: 67: do { LATBbits.LATB6 = 1; } while(0);
  1966  004B  170D               	bsf	13,6	;volatile
  1967                           
  1968                           ;functions.c: 68: do { LATCbits.LATC2 = 0; } while(0);
  1969  004C  110E               	bcf	14,2	;volatile
  1970                           
  1971                           ;functions.c: 69: do { LATCbits.LATC6 = 1; } while(0);
  1972  004D  170E               	bsf	14,6	;volatile
  1973                           
  1974                           ;functions.c: 70: do { LATCbits.LATC4 = 1; } while(0);
  1975  004E  160E               	bsf	14,4	;volatile
  1976                           
  1977                           ;functions.c: 71: do { LATCbits.LATC0 = 0; } while(0);
  1978  004F  100E               	bcf	14,0	;volatile
  1979                           
  1980                           ;functions.c: 72: do { LATBbits.LATB5 = 1; } while(0);
  1981  0050  168D               	bsf	13,5	;volatile
  1982                           
  1983                           ;functions.c: 73: break;
  1984  0051  0008               	return
  1985  0052                     l238:	
  1986                           ;functions.c: 76: do { LATBbits.LATB4 = 1; } while(0);
  1987                           
  1988                           ;functions.c: 75: case 3:
  1989                           
  1990  0052  160D               	bsf	13,4	;volatile
  1991                           
  1992                           ;functions.c: 77: do { LATBbits.LATB6 = 1; } while(0);
  1993  0053  170D               	bsf	13,6	;volatile
  1994                           
  1995                           ;functions.c: 78: do { LATCbits.LATC2 = 1; } while(0);
  1996  0054  150E               	bsf	14,2	;volatile
  1997                           
  1998                           ;functions.c: 79: do { LATCbits.LATC6 = 1; } while(0);
  1999  0055  170E               	bsf	14,6	;volatile
  2000                           
  2001                           ;functions.c: 80: do { LATCbits.LATC4 = 0; } while(0);
  2002  0056  120E               	bcf	14,4	;volatile
  2003                           
  2004                           ;functions.c: 81: do { LATCbits.LATC0 = 0; } while(0);
  2005  0057  100E               	bcf	14,0	;volatile
  2006                           
  2007                           ;functions.c: 82: do { LATBbits.LATB5 = 1; } while(0);
  2008  0058  168D               	bsf	13,5	;volatile
  2009                           
  2010                           ;functions.c: 83: break;
  2011  0059  0008               	return
  2012  005A                     l253:	
  2013                           ;functions.c: 86: do { LATBbits.LATB4 = 0; } while(0);
  2014                           
  2015                           ;functions.c: 85: case 4:
  2016                           
  2017  005A  120D               	bcf	13,4	;volatile
  2018                           
  2019                           ;functions.c: 87: do { LATBbits.LATB6 = 1; } while(0);
  2020  005B  170D               	bsf	13,6	;volatile
  2021                           
  2022                           ;functions.c: 88: do { LATCbits.LATC2 = 1; } while(0);
  2023  005C  150E               	bsf	14,2	;volatile
  2024                           
  2025                           ;functions.c: 89: do { LATCbits.LATC6 = 0; } while(0);
  2026  005D  130E               	bcf	14,6	;volatile
  2027                           
  2028                           ;functions.c: 90: do { LATCbits.LATC4 = 0; } while(0);
  2029  005E  120E               	bcf	14,4	;volatile
  2030                           
  2031                           ;functions.c: 91: do { LATCbits.LATC0 = 1; } while(0);
  2032  005F  140E               	bsf	14,0	;volatile
  2033                           
  2034                           ;functions.c: 92: do { LATBbits.LATB5 = 1; } while(0);
  2035  0060  168D               	bsf	13,5	;volatile
  2036                           
  2037                           ;functions.c: 93: break;
  2038  0061  0008               	return
  2039  0062                     l268:	
  2040                           ;functions.c: 96: do { LATBbits.LATB4 = 1; } while(0);
  2041                           
  2042                           ;functions.c: 95: case 5:
  2043                           
  2044  0062  160D               	bsf	13,4	;volatile
  2045                           
  2046                           ;functions.c: 97: do { LATBbits.LATB6 = 0; } while(0);
  2047  0063  130D               	bcf	13,6	;volatile
  2048                           
  2049                           ;functions.c: 98: do { LATCbits.LATC2 = 1; } while(0);
  2050  0064  150E               	bsf	14,2	;volatile
  2051                           
  2052                           ;functions.c: 99: do { LATCbits.LATC6 = 1; } while(0);
  2053  0065  170E               	bsf	14,6	;volatile
  2054                           
  2055                           ;functions.c: 100: do { LATCbits.LATC4 = 0; } while(0);
  2056  0066  120E               	bcf	14,4	;volatile
  2057                           
  2058                           ;functions.c: 101: do { LATCbits.LATC0 = 1; } while(0);
  2059  0067  140E               	bsf	14,0	;volatile
  2060                           
  2061                           ;functions.c: 102: do { LATBbits.LATB5 = 1; } while(0);
  2062  0068  168D               	bsf	13,5	;volatile
  2063                           
  2064                           ;functions.c: 103: break;
  2065  0069  0008               	return
  2066  006A                     l283:	
  2067                           ;functions.c: 106: do { LATBbits.LATB4 = 1; } while(0);
  2068                           
  2069                           ;functions.c: 105: case 6:
  2070                           
  2071  006A  160D               	bsf	13,4	;volatile
  2072                           
  2073                           ;functions.c: 107: do { LATBbits.LATB6 = 0; } while(0);
  2074  006B  130D               	bcf	13,6	;volatile
  2075                           
  2076                           ;functions.c: 108: do { LATCbits.LATC2 = 1; } while(0);
  2077  006C  150E               	bsf	14,2	;volatile
  2078                           
  2079                           ;functions.c: 109: do { LATCbits.LATC6 = 1; } while(0);
  2080  006D  170E               	bsf	14,6	;volatile
  2081                           
  2082                           ;functions.c: 110: do { LATCbits.LATC4 = 1; } while(0);
  2083  006E  160E               	bsf	14,4	;volatile
  2084                           
  2085                           ;functions.c: 111: do { LATCbits.LATC0 = 1; } while(0);
  2086  006F  140E               	bsf	14,0	;volatile
  2087                           
  2088                           ;functions.c: 112: do { LATBbits.LATB5 = 1; } while(0);
  2089  0070  168D               	bsf	13,5	;volatile
  2090                           
  2091                           ;functions.c: 113: break;
  2092  0071  0008               	return
  2093  0072                     l298:	
  2094                           ;functions.c: 116: do { LATBbits.LATB4 = 1; } while(0);
  2095                           
  2096                           ;functions.c: 115: case 7:
  2097                           
  2098  0072  160D               	bsf	13,4	;volatile
  2099                           
  2100                           ;functions.c: 117: do { LATBbits.LATB6 = 1; } while(0);
  2101  0073  170D               	bsf	13,6	;volatile
  2102                           
  2103                           ;functions.c: 118: do { LATCbits.LATC2 = 1; } while(0);
  2104  0074  150E               	bsf	14,2	;volatile
  2105                           
  2106                           ;functions.c: 119: do { LATCbits.LATC6 = 0; } while(0);
  2107  0075  130E               	bcf	14,6	;volatile
  2108                           
  2109                           ;functions.c: 120: do { LATCbits.LATC4 = 0; } while(0);
  2110  0076  120E               	bcf	14,4	;volatile
  2111                           
  2112                           ;functions.c: 121: do { LATCbits.LATC0 = 0; } while(0);
  2113  0077  100E               	bcf	14,0	;volatile
  2114                           
  2115                           ;functions.c: 122: do { LATBbits.LATB5 = 0; } while(0);
  2116  0078  128D               	bcf	13,5	;volatile
  2117                           
  2118                           ;functions.c: 123: break;
  2119  0079  0008               	return
  2120  007A                     l313:	
  2121                           ;functions.c: 126: do { LATBbits.LATB4 = 1; } while(0);
  2122                           
  2123                           ;functions.c: 125: case 8:
  2124                           
  2125  007A  160D               	bsf	13,4	;volatile
  2126                           
  2127                           ;functions.c: 127: do { LATBbits.LATB6 = 1; } while(0);
  2128  007B  170D               	bsf	13,6	;volatile
  2129                           
  2130                           ;functions.c: 128: do { LATCbits.LATC2 = 1; } while(0);
  2131  007C  150E               	bsf	14,2	;volatile
  2132                           
  2133                           ;functions.c: 129: do { LATCbits.LATC6 = 1; } while(0);
  2134  007D  170E               	bsf	14,6	;volatile
  2135                           
  2136                           ;functions.c: 130: do { LATCbits.LATC4 = 1; } while(0);
  2137  007E  160E               	bsf	14,4	;volatile
  2138                           
  2139                           ;functions.c: 131: do { LATCbits.LATC0 = 1; } while(0);
  2140  007F  140E               	bsf	14,0	;volatile
  2141                           
  2142                           ;functions.c: 132: do { LATBbits.LATB5 = 1; } while(0);
  2143  0080  168D               	bsf	13,5	;volatile
  2144                           
  2145                           ;functions.c: 133: break;
  2146  0081  0008               	return
  2147  0082                     l328:	
  2148                           ;functions.c: 136: do { LATBbits.LATB4 = 1; } while(0);
  2149                           
  2150                           ;functions.c: 135: case 9:
  2151                           
  2152  0082  160D               	bsf	13,4	;volatile
  2153                           
  2154                           ;functions.c: 137: do { LATBbits.LATB6 = 1; } while(0);
  2155  0083  170D               	bsf	13,6	;volatile
  2156                           
  2157                           ;functions.c: 138: do { LATCbits.LATC2 = 1; } while(0);
  2158  0084  150E               	bsf	14,2	;volatile
  2159                           
  2160                           ;functions.c: 139: do { LATCbits.LATC6 = 0; } while(0);
  2161  0085  130E               	bcf	14,6	;volatile
  2162                           
  2163                           ;functions.c: 140: do { LATCbits.LATC4 = 0; } while(0);
  2164  0086  120E               	bcf	14,4	;volatile
  2165                           
  2166                           ;functions.c: 141: do { LATCbits.LATC0 = 1; } while(0);
  2167  0087  140E               	bsf	14,0	;volatile
  2168                           
  2169                           ;functions.c: 142: do { LATBbits.LATB5 = 1; } while(0);
  2170  0088  168D               	bsf	13,5	;volatile
  2171                           
  2172                           ;functions.c: 143: break;
  2173  0089  0008               	return
  2174  008A                     l343:	
  2175                           ;functions.c: 146: do { LATBbits.LATB4 = 1; } while(0);
  2176                           
  2177                           ;functions.c: 145: default:
  2178                           
  2179  008A  160D               	bsf	13,4	;volatile
  2180                           
  2181                           ;functions.c: 147: do { LATBbits.LATB6 = 0; } while(0);
  2182  008B  130D               	bcf	13,6	;volatile
  2183                           
  2184                           ;functions.c: 148: do { LATCbits.LATC2 = 0; } while(0);
  2185  008C  110E               	bcf	14,2	;volatile
  2186                           
  2187                           ;functions.c: 149: do { LATCbits.LATC6 = 1; } while(0);
  2188  008D  170E               	bsf	14,6	;volatile
  2189                           
  2190                           ;functions.c: 150: do { LATCbits.LATC4 = 1; } while(0);
  2191  008E  160E               	bsf	14,4	;volatile
  2192                           
  2193                           ;functions.c: 151: do { LATCbits.LATC0 = 1; } while(0);
  2194  008F  140E               	bsf	14,0	;volatile
  2195                           
  2196                           ;functions.c: 152: do { LATBbits.LATB5 = 1; } while(0);
  2197  0090  168D               	bsf	13,5	;volatile
  2198                           
  2199                           ;functions.c: 154: }
  2200                           
  2201                           ;functions.c: 153: break;
  2202  0091  0008               	return
  2203  0092                     l1209:	
  2204  0092  0872               	movf	displayNumber@number,w
  2205                           
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 10, Range of values is 0 to 9
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; direct_byte           26     6 (fixed)
  2211                           ; simple_byte           31    16 (average)
  2212                           ; jumptable            260     6 (fixed)
  2213                           ;	Chosen strategy is simple_byte
  2214  0093  3A00               	xorlw	0	; case 0
  2215  0094  1903               	skipnz
  2216  0095  283A               	goto	l192
  2217  0096  3A01               	xorlw	1	; case 1
  2218  0097  1903               	skipnz
  2219  0098  2842               	goto	l208
  2220  0099  3A03               	xorlw	3	; case 2
  2221  009A  1903               	skipnz
  2222  009B  284A               	goto	l223
  2223  009C  3A01               	xorlw	1	; case 3
  2224  009D  1903               	skipnz
  2225  009E  2852               	goto	l238
  2226  009F  3A07               	xorlw	7	; case 4
  2227  00A0  1903               	skipnz
  2228  00A1  285A               	goto	l253
  2229  00A2  3A01               	xorlw	1	; case 5
  2230  00A3  1903               	skipnz
  2231  00A4  2862               	goto	l268
  2232  00A5  3A03               	xorlw	3	; case 6
  2233  00A6  1903               	skipnz
  2234  00A7  286A               	goto	l283
  2235  00A8  3A01               	xorlw	1	; case 7
  2236  00A9  1903               	skipnz
  2237  00AA  2872               	goto	l298
  2238  00AB  3A0F               	xorlw	15	; case 8
  2239  00AC  1903               	skipnz
  2240  00AD  287A               	goto	l313
  2241  00AE  3A01               	xorlw	1	; case 9
  2242  00AF  1903               	skipnz
  2243  00B0  2882               	goto	l328
  2244  00B1  288A               	goto	l343
  2245                           
  2246                           ;functions.c: 156: return 1;
  2247                           ;	Return value of _displayNumber is never used
  2248  00B2  0008               	return
  2249  00B3                     __end_of_displayNumber:	
  2250                           
  2251                           	psect	text5
  2252  01D0                     __ptext5:	
  2253 ;; *************** function _clrNumber *****************
  2254 ;; Defined at:
  2255 ;;		line 159 in file "functions.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      unsigned char 
  2262 ;; Registers used:
  2263 ;;		None
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_displayNumber
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _clrNumber
  2285  01D0                     _clrNumber:	
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _clrNumber: []
  2289                           ;functions.c: 160: do { LATBbits.LATB4 = 0; } while(0);
  2290  01D0  0022               	movlb	2	; select bank2
  2291  01D1  120D               	bcf	13,4	;volatile
  2292                           
  2293                           ;functions.c: 161: do { LATBbits.LATB6 = 0; } while(0);
  2294  01D2  130D               	bcf	13,6	;volatile
  2295                           
  2296                           ;functions.c: 162: do { LATCbits.LATC2 = 0; } while(0);
  2297  01D3  110E               	bcf	14,2	;volatile
  2298                           
  2299                           ;functions.c: 163: do { LATCbits.LATC6 = 0; } while(0);
  2300  01D4  130E               	bcf	14,6	;volatile
  2301                           
  2302                           ;functions.c: 164: do { LATCbits.LATC4 = 0; } while(0);
  2303  01D5  120E               	bcf	14,4	;volatile
  2304                           
  2305                           ;functions.c: 165: do { LATCbits.LATC0 = 0; } while(0);
  2306  01D6  100E               	bcf	14,0	;volatile
  2307                           
  2308                           ;functions.c: 166: do { LATBbits.LATB5 = 0; } while(0);
  2309  01D7  128D               	bcf	13,5	;volatile
  2310                           
  2311                           ;functions.c: 167: do { LATCbits.LATC1 = 0; } while(0);
  2312  01D8  108E               	bcf	14,1	;volatile
  2313  01D9  0008               	return
  2314  01DA                     __end_of_clrNumber:	
  2315                           ;functions.c: 169: return 1;
  2316                           ;	Return value of _clrNumber is never used
  2317                           
  2318                           
  2319                           	psect	text6
  2320  01DA                     __ptext6:	
  2321 ;; *************** function _clearDigits *****************
  2322 ;; Defined at:
  2323 ;;		line 191 in file "functions.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      unsigned char 
  2330 ;; Registers used:
  2331 ;;		None
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    3
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_displayDigit
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function _clearDigits
  2353  01DA                     _clearDigits:	
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in _clearDigits: []
  2357                           ;functions.c: 192: do { LATBbits.LATB7 = 1; } while(0);
  2358  01DA  0022               	movlb	2	; select bank2
  2359  01DB  178D               	bsf	13,7	;volatile
  2360                           
  2361                           ;functions.c: 193: do { LATCbits.LATC7 = 1; } while(0);
  2362  01DC  178E               	bsf	14,7	;volatile
  2363                           
  2364                           ;functions.c: 194: do { LATCbits.LATC5 = 1; } while(0);
  2365  01DD  168E               	bsf	14,5	;volatile
  2366                           
  2367                           ;functions.c: 195: do { LATAbits.LATA5 = 1; } while(0);
  2368  01DE  168C               	bsf	12,5	;volatile
  2369                           
  2370                           ;functions.c: 196: do { LATCbits.LATC3 = 1; } while(0);
  2371  01DF  158E               	bsf	14,3	;volatile
  2372  01E0  0008               	return
  2373  01E1                     __end_of_clearDigits:	
  2374                           ;functions.c: 198: return 1;
  2375                           ;	Return value of _clearDigits is never used
  2376                           
  2377                           
  2378                           	psect	text7
  2379  01C4                     __ptext7:	
  2380 ;; *************** function _SYSTEM_Initialize *****************
  2381 ;; Defined at:
  2382 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    5
  2403 ;; This function calls:
  2404 ;;		_OSCILLATOR_Initialize
  2405 ;;		_PIN_MANAGER_Initialize
  2406 ;;		_TMR0_Initialize
  2407 ;;		_WDT_Initialize
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function _SYSTEM_Initialize
  2415  01C4                     _SYSTEM_Initialize:	
  2416                           
  2417                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2421  01C4  3181  216A  3181   	fcall	_PIN_MANAGER_Initialize
  2422                           
  2423                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2424  01C7  3181  21ED  3181   	fcall	_OSCILLATOR_Initialize
  2425                           
  2426                           ;mcc.c: 74: WDT_Initialize();
  2427  01CA  3181  21F2  3181   	fcall	_WDT_Initialize
  2428                           
  2429                           ;mcc.c: 75: TMR0_Initialize();
  2430  01CD  3181  21A1         	fcall	_TMR0_Initialize
  2431  01CF  0008               	return
  2432  01D0                     __end_of_SYSTEM_Initialize:	
  2433                           
  2434                           	psect	text8
  2435  01F2                     __ptext8:	
  2436 ;; *************** function _WDT_Initialize *****************
  2437 ;; Defined at:
  2438 ;;		line 86 in file "mcc_generated_files/mcc.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    3
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_SYSTEM_Initialize
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _WDT_Initialize
  2468  01F2                     _WDT_Initialize:	
  2469                           
  2470                           ;mcc.c: 89: WDTCON = 0x16;
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _WDT_Initialize: [wreg]
  2474  01F2  3016               	movlw	22
  2475  01F3  0021               	movlb	1	; select bank1
  2476  01F4  0097               	movwf	23	;volatile
  2477  01F5  0008               	return
  2478  01F6                     __end_of_WDT_Initialize:	
  2479                           
  2480                           	psect	text9
  2481  01A1                     __ptext9:	
  2482 ;; *************** function _TMR0_Initialize *****************
  2483 ;; Defined at:
  2484 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;Total ram usage:        1 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    4
  2505 ;; This function calls:
  2506 ;;		_TMR0_SetInterruptHandler
  2507 ;; This function is called by:
  2508 ;;		_SYSTEM_Initialize
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _TMR0_Initialize
  2514  01A1                     _TMR0_Initialize:	
  2515                           
  2516                           ;tmr0.c: 69: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2520  01A1  0021               	movlb	1	; select bank1
  2521  01A2  0815               	movf	21,w	;volatile
  2522  01A3  39C0               	andlw	192
  2523  01A4  3817               	iorlw	23
  2524  01A5  0095               	movwf	21	;volatile
  2525                           
  2526                           ;tmr0.c: 72: TMR0 = 0x0C;
  2527  01A6  300C               	movlw	12
  2528  01A7  0020               	movlb	0	; select bank0
  2529  01A8  0095               	movwf	21	;volatile
  2530                           
  2531                           ;tmr0.c: 75: timer0ReloadVal= 12;
  2532  01A9  300C               	movlw	12
  2533  01AA  00F4               	movwf	??_TMR0_Initialize
  2534  01AB  0874               	movf	??_TMR0_Initialize,w
  2535  01AC  00B0               	movwf	_timer0ReloadVal	;volatile
  2536                           
  2537                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  2538  01AD  110B               	bcf	11,2	;volatile
  2539                           
  2540                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  2541  01AE  168B               	bsf	11,5	;volatile
  2542                           
  2543                           ;tmr0.c: 84: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  2544  01AF  30F9               	movlw	low _TMR0_DefaultInterruptHandler
  2545  01B0  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2546  01B1  3001               	movlw	high _TMR0_DefaultInterruptHandler
  2547  01B2  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2548  01B3  3181  21E7         	fcall	_TMR0_SetInterruptHandler
  2549  01B5  0008               	return
  2550  01B6                     __end_of_TMR0_Initialize:	
  2551                           
  2552                           	psect	text10
  2553  01E7                     __ptext10:	
  2554 ;; *************** function _TMR0_SetInterruptHandler *****************
  2555 ;; Defined at:
  2556 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2559 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    3
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_TMR0_Initialize
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _TMR0_SetInterruptHandler
  2587  01E7                     _TMR0_SetInterruptHandler:	
  2588                           
  2589                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2593  01E7  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2594  01E8  0020               	movlb	0	; select bank0
  2595  01E9  00AF               	movwf	_TMR0_InterruptHandler+1
  2596  01EA  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2597  01EB  00AE               	movwf	_TMR0_InterruptHandler
  2598  01EC  0008               	return
  2599  01ED                     __end_of_TMR0_SetInterruptHandler:	
  2600                           
  2601                           	psect	text11
  2602  016A                     __ptext11:	
  2603 ;; *************** function _PIN_MANAGER_Initialize *****************
  2604 ;; Defined at:
  2605 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    3
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_SYSTEM_Initialize
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _PIN_MANAGER_Initialize
  2635  016A                     _PIN_MANAGER_Initialize:	
  2636                           
  2637                           ;pin_manager.c: 57: LATA = 0x24;
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2641  016A  3024               	movlw	36
  2642  016B  0022               	movlb	2	; select bank2
  2643  016C  008C               	movwf	12	;volatile
  2644                           
  2645                           ;pin_manager.c: 58: LATB = 0x80;
  2646  016D  3080               	movlw	128
  2647  016E  008D               	movwf	13	;volatile
  2648                           
  2649                           ;pin_manager.c: 59: LATC = 0xA8;
  2650  016F  30A8               	movlw	168
  2651  0170  008E               	movwf	14	;volatile
  2652                           
  2653                           ;pin_manager.c: 64: TRISA = 0x09;
  2654  0171  3009               	movlw	9
  2655  0172  0021               	movlb	1	; select bank1
  2656  0173  008C               	movwf	12	;volatile
  2657                           
  2658                           ;pin_manager.c: 65: TRISB = 0x00;
  2659  0174  018D               	clrf	13	;volatile
  2660                           
  2661                           ;pin_manager.c: 66: TRISC = 0x00;
  2662  0175  018E               	clrf	14	;volatile
  2663                           
  2664                           ;pin_manager.c: 71: ANSELC = 0x00;
  2665  0176  0023               	movlb	3	; select bank3
  2666  0177  018E               	clrf	14	;volatile
  2667                           
  2668                           ;pin_manager.c: 72: ANSELB = 0x00;
  2669  0178  018D               	clrf	13	;volatile
  2670                           
  2671                           ;pin_manager.c: 73: ANSELA = 0x01;
  2672  0179  3001               	movlw	1
  2673  017A  008C               	movwf	12	;volatile
  2674                           
  2675                           ;pin_manager.c: 78: WPUB = 0x00;
  2676  017B  0024               	movlb	4	; select bank4
  2677  017C  018D               	clrf	13	;volatile
  2678                           
  2679                           ;pin_manager.c: 79: WPUA = 0x09;
  2680  017D  3009               	movlw	9
  2681  017E  008C               	movwf	12	;volatile
  2682                           
  2683                           ;pin_manager.c: 80: WPUC = 0x00;
  2684  017F  018E               	clrf	14	;volatile
  2685                           
  2686                           ;pin_manager.c: 81: OPTION_REGbits.nWPUEN = 0;
  2687  0180  0021               	movlb	1	; select bank1
  2688  0181  1395               	bcf	21,7	;volatile
  2689                           
  2690                           ;pin_manager.c: 87: APFCON1 = 0x00;
  2691  0182  0022               	movlb	2	; select bank2
  2692  0183  019E               	clrf	30	;volatile
  2693                           
  2694                           ;pin_manager.c: 88: APFCON0 = 0x00;
  2695  0184  019D               	clrf	29	;volatile
  2696  0185  0008               	return
  2697  0186                     __end_of_PIN_MANAGER_Initialize:	
  2698                           
  2699                           	psect	text12
  2700  01ED                     __ptext12:	
  2701 ;; *************** function _OSCILLATOR_Initialize *****************
  2702 ;; Defined at:
  2703 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2721 ;;Total ram usage:        0 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    3
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_SYSTEM_Initialize
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           
  2732                           ;psect for function _OSCILLATOR_Initialize
  2733  01ED                     _OSCILLATOR_Initialize:	
  2734                           
  2735                           ;mcc.c: 81: OSCCON = 0x38;
  2736                           
  2737                           ;incstack = 0
  2738                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2739  01ED  3038               	movlw	56
  2740  01EE  0021               	movlb	1	; select bank1
  2741  01EF  0099               	movwf	25	;volatile
  2742                           
  2743                           ;mcc.c: 83: OSCTUNE = 0x00;
  2744  01F0  0198               	clrf	24	;volatile
  2745  01F1  0008               	return
  2746  01F2                     __end_of_OSCILLATOR_Initialize:	
  2747                           
  2748                           	psect	intentry
  2749  0004                     __pintentry:	
  2750 ;; *************** function _INTERRUPT_InterruptManager *****************
  2751 ;; Defined at:
  2752 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    2
  2773 ;; This function calls:
  2774 ;;		_TMR0_ISR
  2775 ;; This function is called by:
  2776 ;;		Interrupt level 1
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780  0004                     _INTERRUPT_InterruptManager:	
  2781                           
  2782                           ;incstack = 0
  2783  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2784                           
  2785                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2786  0005  3180               	pagesel	$
  2787  0006  0020               	movlb	0	; select bank0
  2788  0007  087F               	movf	127,w
  2789  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2790                           
  2791                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2792  0009  1A8B               	btfsc	11,5	;volatile
  2793  000A  1D0B               	btfss	11,2	;volatile
  2794  000B  280E               	goto	i1l112
  2795                           
  2796                           ;interrupt_manager.c: 55: {
  2797                           ;interrupt_manager.c: 56: TMR0_ISR();
  2798  000C  3181  2186         	fcall	_TMR0_ISR
  2799  000E                     i1l112:	
  2800                           ;interrupt_manager.c: 58: else
  2801                           ;interrupt_manager.c: 59: {
  2802                           
  2803                           ;interrupt_manager.c: 57: }
  2804                           
  2805  000E  0871               	movf	??_INTERRUPT_InterruptManager,w
  2806  000F  0020               	movlb	0	; select bank0
  2807  0010  00FF               	movwf	127
  2808  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2809  0012  0009               	retfie
  2810  0013                     __end_of_INTERRUPT_InterruptManager:	
  2811                           
  2812                           	psect	text14
  2813  0186                     __ptext14:	
  2814 ;; *************** function _TMR0_ISR *****************
  2815 ;; Defined at:
  2816 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    1
  2837 ;; This function calls:
  2838 ;;		Absolute function
  2839 ;;		_TMR0_DefaultInterruptHandler
  2840 ;; This function is called by:
  2841 ;;		_INTERRUPT_InterruptManager
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _TMR0_ISR
  2847  0186                     _TMR0_ISR:	
  2848                           
  2849                           ;tmr0.c: 113: INTCONbits.TMR0IF = 0;
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2853  0186  110B               	bcf	11,2	;volatile
  2854                           
  2855                           ;tmr0.c: 115: TMR0 = timer0ReloadVal;
  2856  0187  0020               	movlb	0	; select bank0
  2857  0188  0830               	movf	_timer0ReloadVal,w	;volatile
  2858  0189  0095               	movwf	21	;volatile
  2859                           
  2860                           ;tmr0.c: 117: if(half_second) {
  2861  018A  0878               	movf	_half_second,w	;volatile
  2862  018B  1903               	btfsc	3,2
  2863  018C  2993               	goto	i1l1111
  2864                           
  2865                           ;tmr0.c: 118: seconds++;
  2866  018D  3001               	movlw	1
  2867  018E  00F0               	movwf	??_TMR0_ISR
  2868  018F  0870               	movf	??_TMR0_ISR,w
  2869  0190  07F7               	addwf	_seconds,f	;volatile
  2870                           
  2871                           ;tmr0.c: 119: half_second = 0;
  2872  0191  01F8               	clrf	_half_second	;volatile
  2873                           
  2874                           ;tmr0.c: 120: } else {
  2875  0192  2997               	goto	i1l1113
  2876  0193                     i1l1111:	
  2877                           
  2878                           ;tmr0.c: 121: half_second = 1;
  2879  0193  3001               	movlw	1
  2880  0194  00F0               	movwf	??_TMR0_ISR
  2881  0195  0870               	movf	??_TMR0_ISR,w
  2882  0196  00F8               	movwf	_half_second	;volatile
  2883  0197                     i1l1113:	
  2884                           
  2885                           ;tmr0.c: 122: }
  2886                           ;tmr0.c: 124: if(TMR0_InterruptHandler)
  2887  0197  082E               	movf	_TMR0_InterruptHandler,w
  2888  0198  042F               	iorwf	_TMR0_InterruptHandler+1,w
  2889  0199  1903               	btfsc	3,2
  2890  019A  0008               	return
  2891                           
  2892                           ;tmr0.c: 125: {
  2893                           ;tmr0.c: 126: TMR0_InterruptHandler();
  2894  019B  082F               	movf	_TMR0_InterruptHandler+1,w
  2895  019C  008A               	movwf	10
  2896  019D  082E               	movf	_TMR0_InterruptHandler,w
  2897  019E  000A               	callw
  2898  019F  3181               	pagesel	$
  2899  01A0  0008               	return
  2900  01A1                     __end_of_TMR0_ISR:	
  2901                           
  2902                           	psect	text15
  2903  01F9                     __ptext15:	
  2904 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2905 ;; Defined at:
  2906 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		None
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_TMR0_Initialize
  2930 ;;		_TMR0_ISR
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _TMR0_DefaultInterruptHandler
  2936  01F9                     _TMR0_DefaultInterruptHandler:	
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  2940  01F9  0008               	return
  2941  01FA                     __end_of_TMR0_DefaultInterruptHandler:	
  2942  007E                     btemp	set	126	;btemp
  2943  007E                     int$flags	set	126
  2944  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         3
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      2      19
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_updateDigits
    _updateDigits->_displayDigit
    _displayDigit->_displayNumber
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     483
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
                       _updateDigits
                         _updateTime
 ---------------------------------------------------------------------------------
 (1) _updateTime                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _updateDigits                                         1     1      0     353
                                              5 COMMON     1     1      0
                       _displayDigit
 ---------------------------------------------------------------------------------
 (2) _displayDigit                                         2     1      1     353
                                              3 COMMON     2     1      1
                        _clearDigits
                      _displayNumber
 ---------------------------------------------------------------------------------
 (3) _displayNumber                                        1     1      0      31
                                              2 COMMON     1     1      0
                          _clrNumber
 ---------------------------------------------------------------------------------
 (4) _clrNumber                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearDigits                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      96
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      96
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      96
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _updateDigits
     _displayDigit
       _clearDigits
       _displayNumber
         _clrNumber
   _updateTime

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      13       5       23.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Nov 02 17:06:17 2017

                             __CFG_CP$OFF 0000                             ?_displayDigit 0073  
                         _timer0ReloadVal 0030                               __CFG_LVP$ON 0000  
                                     l223 004A                                       l208 0042  
                                     l313 007A                                       l253 005A  
                                     l238 0052                                       l343 008A  
                                     l328 0082                                       l192 003A  
                                     l283 006A                                       l268 0062  
                                     l390 0109                                       l383 0103  
                                     l393 010C                                       l298 0072  
                                     l387 0106                              __CFG_CPD$OFF 0000  
                                     u287 0159                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                          ?_displayNumber 0070                                      l1209 0092  
                                    l1251 010F                                      l1333 0166  
                                    l1255 0112                                      l1329 015E  
                                    l1291 00DF                                      l1293 00E3  
                                    l1277 00CC                                      l1269 00C2  
                                    l1295 00E7                                      l1287 00D7  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _TMR0 0015  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 0149  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    start 0013                             __CFG_MCLRE$ON 0000  
                          ??_displayDigit 0074                   __end_of_TMR0_Initialize 01B6  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0005  
           __end_of_OSCILLATOR_Initialize 01F2                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                                     i1l112 000E  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0072                          __end_of_TMR0_ISR 01A1  
                          _WDT_Initialize 01F2                                     _hours 007A  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                      __size_of_clearDigits 0007  
                         __initialization 0015                              __end_of_main 016A  
                     displayNumber@number 0072               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0031                            __CFG_PLLEN$OFF 0000  
                  __end_of_WDT_Initialize 01F6                           ??_displayNumber 0072  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    i1l1111 0193  
                                  i1l1113 0197                                    _OSCCON 0099  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
                          __CFG_STVREN$ON 0000                                    _digit1 002D  
                                  _digit2 002B                                    _digit3 0029  
                                  _digit4 0027                          ?_TMR0_Initialize 0070  
                            __pdataCOMMON 0079                           ?_WDT_Initialize 0070  
TMR0_SetInterruptHandler@InterruptHandler 0072                      __end_of_displayDigit 0121  
                       _SYSTEM_Initialize 01C4                   __end_of__initialization 002F  
                       displayDigit@digit 0074                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                              __pidataBANK0 01B6  
                     ??_SYSTEM_Initialize 0075                                 ?_TMR0_ISR 0070  
                      __size_of_clrNumber 000A                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 01D0                                __pmaintext 0149  
        __end_of_TMR0_SetInterruptHandler 01ED                                ??_TMR0_ISR 0070  
                              __pintentry 0004                                   _APFCON0 011D  
                                 _APFCON1 011E                                   _OSCTUNE 0098  
                          main@maxseconds 0032                         __end_of_clrNumber 01DA  
                                 __ptext1 00B3                                   __ptext2 0121  
                                 __ptext3 00F8                                   __ptext4 0033  
                                 __ptext5 01D0                                   __ptext6 01DA  
                                 __ptext7 01C4                                   __ptext8 01F2  
                                 __ptext9 01A1                                _maxminutes 0023  
                              _maxseconds 0024                     _OSCILLATOR_Initialize 01ED  
                                 _minutes 007B                  ??_PIN_MANAGER_Initialize 0072  
                                 _seconds 0077                             _maxtenminutes 0022  
                   __size_of_displayDigit 0029                __size_of_SYSTEM_Initialize 000C  
                    end_of_initialization 002F                             ??_clearDigits 0072  
                                 init_ram 01E1                                   initloop 01E2  
                              _tenminutes 0076                              _displayDigit 00F8  
                        ??_WDT_Initialize 0072                  _TMR0_SetInterruptHandler 01E7  
                        __CFG_FOSC$INTOSC 0000                                _updateTime 00B3  
                   __end_of_displayNumber 00B3                        displayDigit@number 0073  
                           ?_updateDigits 0070                       __end_of_clearDigits 01E1  
                           __pidataCOMMON 01F6                         __size_of_TMR0_ISR 001B  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 0015  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 001C  
                          ??_updateDigits 0075                               __pdataBANK0 0020  
                             __pbssCOMMON 0076                                 ___latbits 0002  
                           __pcstackBANK0 0031                               ?_updateTime 0070  
                             _clearDigits 01DA                     _TMR0_InterruptHandler 002E  
                               __pnvBANK0 002E                    _PIN_MANAGER_Initialize 016A  
                               _digit1val 002C                                 _digit2val 002A  
                               _digit3val 0028                                 _digit4val 0026  
                               _delaytime 0025                                 _clrNumber 01D0  
            ??_INTERRUPT_InterruptManager 0071                               _half_second 0078  
                       ??_TMR0_Initialize 0074                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
     __size_of_INTERRUPT_InterruptManager 000F                ??_TMR0_SetInterruptHandler 0074  
                     __size_of_updateTime 0045                                ?_clrNumber 0070  
                                _TMR0_ISR 0186                      __end_of_updateDigits 0149  
                 ??_OSCILLATOR_Initialize 0072                                  __ptext10 01E7  
                                __ptext11 016A                                  __ptext12 01ED  
                                __ptext14 0186                                  __ptext15 01F9  
                           __size_of_main 0021                                  _maxhours 0021  
                             _maxtenhours 0020      __end_of_TMR0_DefaultInterruptHandler 01FA  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 01F9  
                                _tenhours 0079                               ??_clrNumber 0072  
                                int$flags 007E                    __size_of_displayNumber 0080  
      __end_of_INTERRUPT_InterruptManager 0013                _INTERRUPT_InterruptManager 0004  
                              _INTCONbits 000B                              ??_updateTime 0072  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                            ?_clearDigits 0070                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000             ?_TMR0_DefaultInterruptHandler 0070  
                      __end_of_updateTime 00F8                     __size_of_updateDigits 0028  
                              _OPTION_REG 0095                           _TMR0_Initialize 01A1  
                           _displayNumber 0033            __end_of_PIN_MANAGER_Initialize 0186  
                            _updateDigits 0121  
